{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","image","url","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","position","date","desc","job","strapiId","onClick","itemInDescription","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-c994c156441ccad48408.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({description, title, github, stack, url, image, index}) => {\n  return ( \n  <article className=\"project\">\n    <Image fluid={image.childImageSharp.fluid} \n    className=\"project-img\"/>\n    <div className=\"project-info\">\n      <span className=\"project-number\">0{index + 1 }.</span>\n      <h3>{title || \"Deafult Title\"}</h3>\n      <p className=\"project-desc\">{description}</p>\n      <div className=\"project-stack\">\n        {/* need to iterate over the array of stack */}\n        {stack.map((item) => {\n          return <span key={item.id}>{item.title}</span>\n        })}\n      </div>\n      <div className=\"project-links\">\n        <a href={github}>\n          <FaGithubSquare className=\"project-icon\" />\n        </a>\n        <a href={github}>\n          <FaShareSquare className=\"project-icon\" />\n        </a>\n      </div>\n    </div>\n  </article>\n  )\n}\n\nProject.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({projects, title, showLink}) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title}/>\n      <div className=\"section-center projects-center\">\n        {\n          projects.map((project, index) => {\n            // basically with the spread operator I am requesting all \n            // the properties requested in the graphql\n            return  <Project key={project.id} index={index} {...project} />\n          })\n        }\n      </div>\n      {\n        // if showLink is true than wherever I am passing after && \n        // is going to be rendered\n        showLink && (\n          <Link to=\"/projects\" className=\"btn center-btn\">\n            projects\n          </Link>\n        )\n      }\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n// ...GatsbyImageSharpFluid\n\n\nconst query = graphql`\n    {\n      file(relativePath: {eq: \"hero-img.png\"}) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `\n\n\nconst Hero = () => {\n  // We will do a quick quey to make sure we receive the image\n  // const data = useStaticQuery(query);\n  // console.log(data);\n\n  // Now we will do a destructuring:\n  const {\n    file:{\n      childImageSharp:{fluid},\n    },\n  } = useStaticQuery(query);\n\n\n  return ( \n  <header className=\"hero\">\n    <div className=\"section-center hero-center\">\n      <article className=\"hero-info\">\n        <div>\n          <div className=\"underline\"></div>\n            <h1>portfolio test</h1>\n            <h4>freelance web and mobile UI/UX Designer</h4>\n            <Link to=\"/contact\" className=\"btn\">\n              contact me\n            </Link>\n            <SocialLinks />\n        </div>\n      </article>\n      <Image fluid={fluid} className=\"hero-img\"/>\n    </div>\n  </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n  <section className=\"section bg-grey\">\n    <Title title=\"services\"/>\n    <div className=\"section-center services-cemter\">\n      {services.map((service) => {\n        // Below console.log will show what is in the services.js\n        // console.log(service);\n        const {id, icon, title, text} = service\n\n        return <article key={id} className=\"service\">\n          {icon}\n          <h4>{title}</h4>\n          <div className=\"underline\"></div>\n          <p>{text}</p>\n        </article>\n\n      })}\n    </div>\n  </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAlignRight, FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: {fields: strapiId, order: DESC}) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query);\n  // console.log(data)\n  // Lets start destructuring\n  const {\n    allStrapiJobs: {\n      nodes: jobs},\n    } = data\n    // console.log(jobs);\n\n    const [value, setValue] = React.useState(0)\n    // By setting useState to 0 --> useState(0) I will get\n    // the first item on the list\n    // That item on the list will be equal to \"value\"\n    // and I will pass in that value\n    // Once I click on a button I use the setValue\n    // in order to change \"value\" in .... = jobs[value];\n\n\n    const { company, position, date, desc } = jobs[value];\n    // const { company, position, date, desc } = jobs[1]; <-- this way is hardcoded\n    // console.log(company, position, date, desc);\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experience\" />\n      <div className=\"jobs-center\">\n        {/* btn container where we show all the buttons */}\n        <div className=\"btn-container\">\n          {jobs.map( (job, index) => {\n            // Remember job represent each and every parameter in our array\n            return (\n              <button \n                key={job.strapiId} \n                // only once I click than I run my set index\n                // Also another reason for the arrow function () =>\n                // is because I dont want to run the setValue right away\n                // because we are passing the index : () => setValue(index).\n                // Because we are passing the index I cannot just reference the function\n                // but I need to invoke it so only once I click than I run my set index\n                onClick={() => setValue(index)}\n                className={`job-btn ${index === value && \"active-btn\"}`}\n              >{job.company}\n              </button>\n            )\n          })}\n        </div>\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {\n            desc.map(itemInDescription => {\n              return (\n                <div key={itemInDescription.id} className=\"job-desc\">\n                  <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n                  <p>{itemInDescription.name}</p>\n                </div>\n              )\n            })\n          }\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\n\nexport default ({data}) => {\n  // console.log(data)\n  const {\n    allStrapiProjects: {nodes:projects},\n    allStrapiBlogs: {nodes:blogs}\n  } = data;\n\n\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" description=\"this is our home page\"/>\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects\n        projects={projects}  \n        title=\"featured projects\"\n        showLink />\n        <Blogs\n          blogs={blogs} title=\"latest blogs\"\n          showLink />\n    </Layout>\n    )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: {featured: {eq: true}}) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: {fields: date, order: DESC}, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(formatString: \"MMMM Do, YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n  }\n`\n// ...GatsbyImageSharpFluid\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nconst Blog = ({id, title, image, date, category, slug, desc}) => {\n  return ( \n  <Link to={`/blogs/${slug}`} className=\"blog\" key={id} >\n    <article>\n      {\n        image && (\n          <Image fluid={image.childImageSharp.fluid}\n          className=\"blog-img\" />\n        )\n      }\n      <div className=\"blog-card\">\n        <h4>{title}</h4>\n        <p>{desc}</p>\n        <div className=\"blog-footer\">\n          <p>{category}</p>\n          <p>{date}</p>\n        </div>\n      </div>\n    </article>\n  </Link>\n  )\n}\n\nBlog.propTypes = {\n  // id: PropTypes.number.isRequired,\n  // title: PropTypes.string.isRequired,\n  // image: PropTypes.object.isRequired,\n  // date: PropTypes.number.isRequired,\n  // category: PropTypes.string.isRequired,\n  // slug: PropTypes.string.isRequired,\n  // desc: PropTypes.string.isRequired\n}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nexport const Blogs = ({blogs, title, showLink}) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {\n          blogs.map((blog) => {\n            return <Blog key={blog.id} {...blog} />\n          })\n        }\n      </div>\n      {\n        showLink && (\n          <Link to=\"/blog\" className=\"btn center-btn\">\n            blog\n          </Link>\n        )\n      }\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}