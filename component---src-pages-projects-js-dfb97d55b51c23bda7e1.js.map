{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","className","title","Project","description","github","stack","image","url","index","fluid","childImageSharp","map","item","key","id","href","Projects","showLink","Title","project","to"],"mappings":"8FAAA,8FAqBaA,EAAK,aA2BHC,UA1CM,SAAC,GAGf,IADwBC,EACzB,EAFJC,KACEC,kBAAqBC,MAEvB,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,iBACjB,kBAAC,IAAD,CAAUJ,SAAUA,EAAUK,MAAM,qB,kHC4B7BC,EArCC,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,YAAaF,EAA6C,EAA7CA,MAAOG,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,MAAYC,GAAkB,EAAvBC,IAAuB,EAAlBD,OAAOE,EAAW,EAAXA,MAC/D,OACA,6BAASR,UAAU,WACjB,kBAAC,IAAD,CAAOS,MAAOH,EAAMI,gBAAgBD,MACpCT,UAAU,gBACV,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCQ,EAAQ,EAA3C,KACA,4BAAKP,GAAS,iBACd,uBAAGD,UAAU,gBAAgBG,GAC7B,yBAAKH,UAAU,iBAEZK,EAAMM,KAAI,SAACC,GACV,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKX,WAGrC,yBAAKD,UAAU,iBACb,uBAAGe,KAAMX,GACP,kBAAC,IAAD,CAAgBJ,UAAU,kBAE5B,uBAAGe,KAAMX,GACP,kBAAC,IAAD,CAAeJ,UAAU,sB,YCOpBgB,IA1BE,SAAC,GAAiC,IAAhCpB,EAA+B,EAA/BA,SAAUK,EAAqB,EAArBA,MAAOgB,EAAc,EAAdA,SAClC,OACE,6BAASjB,UAAU,oBACjB,kBAACkB,EAAA,EAAD,CAAOjB,MAAOA,IACd,yBAAKD,UAAU,kCAEXJ,EAASe,KAAI,SAACQ,EAASX,GAGrB,OAAQ,kBAAC,EAAD,eAASK,IAAKM,EAAQL,GAAIN,MAAOA,GAAWW,QAOxDF,GACE,kBAAC,IAAD,CAAMG,GAAG,YAAYpB,UAAU,kBAA/B","file":"component---src-pages-projects-js-dfb97d55b51c23bda7e1.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\n// ...GatsbyImageSharpFluid\n\nconst ProjectsPage = ({\n  data: {\n    allStrapiProjects: { nodes:projects }}\n}) => {\n  return ( \n    <Layout>\n      <section className=\"projects-page\">\n        <Projects projects={projects} title=\"all projects\" />\n      </section>\n    </Layout>\n  )\n}\n\n\n\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\n\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({description, title, github, stack, url, image, index}) => {\n  return ( \n  <article className=\"project\">\n    <Image fluid={image.childImageSharp.fluid} \n    className=\"project-img\"/>\n    <div className=\"project-info\">\n      <span className=\"project-number\">0{index + 1 }.</span>\n      <h3>{title || \"Deafult Title\"}</h3>\n      <p className=\"project-desc\">{description}</p>\n      <div className=\"project-stack\">\n        {/* need to iterate over the array of stack */}\n        {stack.map((item) => {\n          return <span key={item.id}>{item.title}</span>\n        })}\n      </div>\n      <div className=\"project-links\">\n        <a href={github}>\n          <FaGithubSquare className=\"project-icon\" />\n        </a>\n        <a href={github}>\n          <FaShareSquare className=\"project-icon\" />\n        </a>\n      </div>\n    </div>\n  </article>\n  )\n}\n\nProject.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({projects, title, showLink}) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title}/>\n      <div className=\"section-center projects-center\">\n        {\n          projects.map((project, index) => {\n            // basically with the spread operator I am requesting all \n            // the properties requested in the graphql\n            return  <Project key={project.id} index={index} {...project} />\n          })\n        }\n      </div>\n      {\n        // if showLink is true than wherever I am passing after && \n        // is going to be rendered\n        showLink && (\n          <Link to=\"/projects\" className=\"btn center-btn\">\n            projects\n          </Link>\n        )\n      }\n    </section>\n  )\n}\n\nexport default Projects\n"],"sourceRoot":""}